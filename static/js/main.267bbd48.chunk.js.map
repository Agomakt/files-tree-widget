{"version":3,"sources":["components/StyledName.jsx","utils/index.js","components/Collapse.jsx","api/index.js","components/TreeNode.jsx","components/Tree.jsx","App.js","reducers/index.js","reducers/treeNodeReducer.js","index.js"],"names":["StyledName","styled","div","title","includes","iconRender","children","checkTitle","criteria","toLowerCase","FolderOutlined","FileZipOutlined","FileTextOutlined","FilePdfOutlined","FileJpgOutlined","FileGifOutlined","FileWordOutlined","FileExcelOutlined","FileImageOutlined","makeUpdate","a","u","Array","isArray","some","b","i","bb","id","Collapse","isOpen","rootURL","getFilesData","dirId","axios","get","params","TreeNode","node","currentState","useSelector","state","dispatch","useDispatch","console","log","hasChild","useState","setIsOpen","isUploaded","setIsUploaded","onClick","childTree","type","payload","data","handleToggleChildren","className","style","paddingLeft","Tree","map","tree","App","initialNode","treeNode","useEffect","initialTree","length","rootReducer","combineReducers","action","transformData","newState","store","createStore","composeWithDevTools","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.267bbd48.chunk.js","sourcesContent":["import styled from 'styled-components/macro'\r\n\r\n\r\nexport const StyledName = styled.div`\r\n  display: inline-flex;\r\n  font-weight: ${({title}) => !title.includes('.') && 'bold'};\r\n\r\n  .title {\r\n    padding-left: 0.5rem;\r\n  }\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    transform: scale(1.1);\r\n    transition: 0.2s;\r\n    align-content: center;\r\n  }\r\n`","import {\r\n  FolderOutlined,\r\n  // FolderOpenOutlined,\r\n  FileZipOutlined,\r\n  FileTextOutlined,\r\n  FilePdfOutlined,\r\n  FileJpgOutlined,\r\n  FileGifOutlined,\r\n  FileImageOutlined,\r\n  FileWordOutlined,\r\n  FileExcelOutlined\r\n\r\n\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nexport const iconRender = (title, children = null) => {\r\n  const checkTitle = (criteria) => {\r\n    return title.toLowerCase().includes(criteria)\r\n  }\r\n  if (!children) {\r\n    \r\n    if (checkTitle('zip')) {\r\n      return <FileZipOutlined /> \r\n    } else if (checkTitle('txt')) {\r\n      return <FileTextOutlined /> \r\n    } else if (title.includes('pdf')) {\r\n      return <FilePdfOutlined />\r\n    } else if (title.includes('pdf')) {\r\n      return <FilePdfOutlined />\r\n    } else if (title.includes('jpg') || title.includes('jpeg')) {\r\n      return <FileJpgOutlined />\r\n    } else if (title.includes('gif')) {\r\n      return <FileGifOutlined />\r\n    } else if (title.includes('docx') || title.includes('doc')) {\r\n      return < FileWordOutlined/>\r\n    } else if (title.includes('xlsx') || title.includes('xls')) {\r\n      return <FileExcelOutlined />\r\n    } else return <FileImageOutlined />\r\n\r\n  } else return <FolderOutlined />\r\n\r\n}\r\n\r\n\r\nexport const findById = (node, id) => {\r\n  if (node.id === id) return node; \r\n  var result = null;\r\n  if (node.children) {\r\n    for (var i = 0; i < node.children.length && result == null; i++) {\r\n        result = findById(node.children[i], id)\r\n    }\r\n  }\r\n  return result; \r\n}\r\n\r\n\r\nexport const makeUpdate = (a, u) =>  {\r\n  return Array.isArray(a) && a.some(function (b,i,bb) {\r\n      if (b.id === u.id) {\r\n          bb[i] = u;\r\n          return true;\r\n      }\r\n      return makeUpdate(b.children, u);\r\n  });\r\n}","import styled from 'styled-components/macro'\r\n\r\nexport const Collapse = styled.div`\r\n  height: max-content;\r\n  max-height: ${({isOpen}) => (isOpen ? \"85vh\" : \"0px\")};\r\n  overflow: hidden;\r\n  transition: 0.3s ease-in-out;\r\n`;","import axios from 'axios';\r\n\r\nconst rootURL = 'http://164.90.161.80:3000/'\r\n\r\nexport const getFilesData = (dirId=null) => axios.get(\r\n  `${rootURL}api/content`, \r\n  {params: {dirId}}\r\n  );\r\n\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { StyledName } from './StyledName';\r\nimport Tree from './Tree';\r\nimport { iconRender } from '../utils';\r\nimport { Collapse } from './Collapse';\r\nimport { getFilesData } from '../api';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n\r\nconst TreeNode = ({node}) => {\r\n  const currentState = useSelector(state => state);\r\n  const dispatch = useDispatch()\r\n  console.log('currentState', currentState)\r\n\r\n  const {id, title, children} = node;\r\n  const hasChild = !!children \r\n\r\n  const [isOpen, setIsOpen] = useState(true);\r\n  const [isUploaded, setIsUploaded] = useState(false);\r\n\r\n  const handleToggleChildren = (id) => {\r\n    if ( hasChild && !isUploaded) {\r\n      console.log('click on button');\r\n      if (id !==0) {\r\n        ( async () => {\r\n        const childTree = await getFilesData(id)\r\n        \r\n        dispatch({\r\n          type: 'OPEN_AND_LOAD',\r\n          payload: {\r\n            id, \r\n            children: childTree.data, \r\n          }\r\n        })\r\n        setIsUploaded(true)\r\n        setIsOpen(true)\r\n        })();\r\n      }\r\n    }\r\n    setIsOpen(!isOpen)\r\n  }\r\n\r\n  return (\r\n      <div>\r\n        <StyledName key={id} title={title} onClick={() => handleToggleChildren(id)}> \r\n          {iconRender(title, children)}\r\n          <div className='title'>{title}</div>\r\n        </StyledName>\r\n        \r\n        {hasChild && children && (\r\n          <Collapse style={{paddingLeft: '15px'}} isOpen={isOpen}>\r\n            <Tree data={children} />\r\n          </Collapse>\r\n          )\r\n        }\r\n\r\n      </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default TreeNode;","import React from 'react';\r\nimport TreeNode from './TreeNode';\r\n\r\nconst Tree = ({data = []}) => {\r\n  console.log('data', data)\r\n\r\n  return (\r\n    <div>\r\n      {data && data.map(tree => {\r\n        console.log('tree', tree)\r\n        return <TreeNode key={tree.id} node={tree} />\r\n      })}\r\n      \r\n      \r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Tree;","import React, { useEffect } from 'react';\r\nimport Tree from './components/Tree';\r\n// import { fullFFStructure } from './data';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getFilesData } from './api';\r\n\r\n\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch()\r\n  const initialNode = useSelector(state => state.treeNode)\r\n  console.log('initialNode', initialNode)\r\n\r\n  useEffect(() => {\r\n    ( async () => {\r\n       const initialTree = await getFilesData()\r\n\r\n       dispatch({\r\n          type: 'INITIAL_LOAD',\r\n          payload: initialTree.data \r\n        })\r\n     }\r\n    )();\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <h3>Happy coding!</h3>\r\n      {initialNode.length && <Tree data={initialNode}/>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport { treeNodeReducer } from './treeNodeReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  treeNode: treeNodeReducer\r\n})\r\n\r\n\r\nexport default rootReducer;","import { makeUpdate } from \"../utils\";\r\n\r\nexport const treeNodeReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'INITIAL_LOAD':\r\n      return [action.payload];\r\n\r\n    case 'OPEN_AND_LOAD':\r\n\r\n      const transformData = () => {\r\n        let newState = [...state]\r\n        makeUpdate(newState, action.payload.children);\r\n        return newState\r\n      }\r\n      return transformData();\r\n\r\n      default: \r\n        return state;\r\n  }\r\n\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from './reducers';\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector('#root'));\r\n"],"sourceRoot":""}